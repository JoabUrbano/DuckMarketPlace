IMPLEMENTATION DuckMarketPlace_i
    
REFINES DuckMarketPlace
    
VALUES
    NOMEPRODUTO = 0..9;
    IDPRODUTO = 0..9;
    IDUSUARIO = 0..9;
    NOMEUSUARIO = 0..9;
    userDummy = 0;
    productDummy = 0;
    userIdDummy = 0
    
CONCRETE_VARIABLES
    usuarios_i,
    active_users,

    creditousuario_i,

    totalPriceCart_i,
    userIdsUsed_i,

    produtos_i,
    precoproduto_i,
    estoque_i,
    dono_i
    
INVARIANT
    usuarios_i : IDUSUARIO --> NOMEUSUARIO &
    dom(usuarios_i |>> {userDummy}) = dom(usuarios) &
    active_users : IDUSUARIO --> BOOL &
    
    creditousuario_i : IDUSUARIO --> NATURAL &
    dom( active_users |> {TRUE} ) /\ dom(creditousuario_i) = dom(creditousuario) &
 
    totalPriceCart_i : IDUSUARIO --> NATURAL &
    dom(totalPriceCart_i |>> {0}) = dom(totalPriceCart) &
    
    userIdsUsed_i : IDUSUARIO --> BOOL &
    dom(userIdsUsed_i |> {TRUE}) = userIdsUsed &

    /* ----- Produtos ----- */
    produtos_i : IDPRODUTO --> NOMEPRODUTO &
    dom(produtos_i |>> {productDummy}) = dom(produtos) &

    precoproduto_i : IDPRODUTO --> NATURAL &
    dom(precoproduto_i) /\ dom(produtos_i |>> {productDummy}) = dom(precoproduto) &
    
    estoque_i : IDPRODUTO --> NATURAL &
    dom(estoque_i) /\ dom(produtos_i |>> {productDummy}) = dom(estoque) &

    dono_i : IDPRODUTO --> IDUSUARIO &
    dom(dono_i |>> {userIdDummy}) = dom(dono)
    
INITIALISATION
    usuarios_i := IDUSUARIO*{userDummy};
    active_users := IDUSUARIO*{FALSE};

    creditousuario_i := IDUSUARIO*{0};

    totalPriceCart_i := IDUSUARIO*{0};
    userIdsUsed_i := IDUSUARIO*{FALSE};

    produtos_i := IDPRODUTO*{productDummy};
    precoproduto_i := IDPRODUTO*{0};
    estoque_i := IDPRODUTO*{0};
    dono_i := IDPRODUTO*{userIdDummy}

OPERATIONS

    addUser(uu, nn, cc) = 
        BEGIN
            usuarios_i(uu) :=  nn;
            creditousuario_i(uu) := cc;
	        active_users(uu) := TRUE;
            totalPriceCart_i(uu) :=  0;
            userIdsUsed_i(uu) := TRUE
        END;
        
    removeUser(uu) = skip;

    altNameUser(uu, nn) =
        BEGIN
    	        usuarios_i(uu) := nn
        END;

    addCredit(uu, cc) =
        BEGIN
	        IF active_users(uu) = TRUE THEN
        	        creditousuario_i(uu) := creditousuario_i(uu) + cc
    	        END
        END;

    withdrawCredit(uu, cc) = 
        BEGIN
    	    IF active_users(uu) = TRUE THEN
	        creditousuario_i(uu) := creditousuario_i(uu) - cc
	    END
        END;

    addProduct(ii, nn, uu, qq, pp) = 
	BEGIN
	    produtos_i(ii) := nn;
	    dono_i(ii) := uu;
	    estoque_i(ii) := qq;
	    precoproduto_i(ii) := pp
	END;

    removeProduct(ii)= skip;
    altProductName(ii, nn) = skip;
    altProductStock(ii, qq) = skip;
    altProductPrice(ii, pp) = skip;
    buyProduct(uu, pp, qq) = skip;
    returnProduct(uu, pp, rr, qq) = skip;
    addProductToCart(uu, pp, qq) = skip;
    removeProductFromCart(uu, pp, rr, qq) = skip;
    buyProductsFromCart(uu) = skip;
    payDebt(ii) = skip;
    payDebtWithCredit(ii, cc) = skip;
    withdrawInactiveCredit(uu) = skip;
    removeInactiveUser(uu) = skip;
    
    /* ----- Operações de query ----- */
    oo <-- showUserCredit(uu) =
	BEGIN
	    IF usuarios_i(uu) /= userDummy THEN
		oo := creditousuario_i(uu)
	    END
	END;
    oo <-- showUserName(uu) = 
	BEGIN
	    IF usuarios_i(uu) /= userDummy THEN
		oo := usuarios_i(uu)
	    END
	END;
	//Falta fazer ainda!!!!
    oo <-- showUserCartValue(uu) = skip;
    oo <-- showUserDebt(uu) = skip;
    oo <-- showProductName(pp) =
	BEGIN
	    IF produtos_i(pp) /= productDummy THEN
		oo := produtos_i(pp)
	    END
	END;
    oo <-- showProductStock(pp) =
	BEGIN
	    IF produtos_i(pp) /= productDummy THEN
		oo := estoque_i(pp)
	    END
	END;
    oo <-- showProductPrice(pp) =
	BEGIN
	    IF produtos_i(pp) /= productDummy THEN
		oo := precoproduto_i(pp)
	    END
	END;
    
    /* ----- Operações de pré condições ----- */
    oo <-- preAddUser(uu, nn, cc) = 
        VAR isUsed IN
            isUsed := userIdsUsed_i(uu);
            IF  isUsed = FALSE & nn /= userDummy THEN
                oo := TRUE
            ELSE 
                oo := FALSE
            END
        END;

    oo <-- preRemoveUser(uu) = skip;
    oo <-- preAltNameUser(uu, nn) = skip;
    oo <-- preAddCredit(uu, cc) = skip;
    oo <-- preWithdrawCredit(uu, cc) =  skip;
    oo <-- preAddProduct(ii, nn, uu, qq, pp) = skip;
    oo <-- preRemoveProduct(ii) = skip;
    oo <-- preAltProductName(ii, nn) = skip;
    oo <-- preAltProductStock(ii, qq) = skip;
    oo <-- preAltProductPrice(ii, pp) = skip;
    oo <-- preBuyProduct(uu, pp, qq) = skip;
    oo <-- preReturnProduct(uu, pp, rr, qq) = skip;
    oo <-- preAddProductToCart(uu, pp, qq) = skip;
    oo <-- preRemoveProductFromCart(uu, pp, rr, qq) = skip;
    oo <-- preBuyProductsFromCart(uu) = skip;
    oo <-- prePayDebt(ii) =  skip;
    oo <-- prePayDebtWithCredit(ii, cc) = skip;
    oo <-- preWithdrawInactiveCredit(uu) = skip;
    oo <-- preRemoveInactiveUser(uu) = skip
 END