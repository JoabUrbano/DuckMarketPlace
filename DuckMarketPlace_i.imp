IMPLEMENTATION DuckMarketPlace_i
    
REFINES DuckMarketPlace
    
VALUES
    NOMEPRODUTO = 0..9;
    IDPRODUTO = 0..9;
    IDUSUARIO = 0..9;
    NOMEUSUARIO = 0..9;
    userDummy = 0
    
CONCRETE_VARIABLES
    usuarios_i,
    creditousuario_i,
    totalPriceCart_i,
    userIdsUsed_i
    
INVARIANT
    usuarios_i : IDUSUARIO --> NOMEUSUARIO &
    dom(usuarios_i |>> {userDummy}) = dom(usuarios) &
    creditousuario_i : IDUSUARIO --> NAT &
    dom(creditousuario_i |>> {0}) = dom(creditousuario) &
    totalPriceCart_i : IDUSUARIO --> NAT &
    dom(totalPriceCart_i |>> {0}) = dom(totalPriceCart) &
    userIdsUsed_i : IDUSUARIO --> BOOL &
    dom(userIdsUsed_i |> {TRUE}) = userIdsUsed
    
INITIALISATION
    usuarios_i := IDUSUARIO*{userDummy};
    creditousuario_i := IDUSUARIO*{0};
    totalPriceCart_i := IDUSUARIO*{0};
    userIdsUsed_i := IDUSUARIO*{FALSE}

OPERATIONS
    addUser(uu, nn, cc) = 
        BEGIN
            usuarios_i(uu) :=  nn;
            creditousuario_i(uu) := cc;
            totalPriceCart_i(uu) :=  0;
            userIdsUsed_i(uu) := TRUE
        END;
        
    removeUser(uu) = skip;
    altNameUser(uu, nn) = skip;
    addCredit(uu, cc) = skip;
    withdrawCredit(uu, cc) =  skip;
    addProduct(ii, nn, uu, qq, pp) = skip;
    removeProduct(ii)= skip;
    altProductName(ii, nn) = skip;
    altProductStock(ii, qq) = skip;
    altProductPrice(ii, pp) = skip;
    buyProduct(uu, pp, qq) = skip;
    returnProduct(uu, pp, rr, qq) = skip;
    addProductToCart(uu, pp, qq) = skip;
    removeProductFromCart(uu, pp, rr, qq) = skip;
    buyProductsFromCart(uu) = skip;
    payDebt(ii) = skip;
    payDebtWithCredit(ii, cc) = skip;
    withdrawInactiveCredit(uu) = skip;
    removeInactiveUser(uu) = skip;
    
    /* ----- Operações de query ----- */
    oo <-- showUserCredit(uu) = skip;
    oo <-- showUserName(uu) = skip;
    oo <-- showUserCartValue(uu) = skip;
    oo <-- showUserDebt(uu) = skip;
    oo <-- showProductName(pp) = skip;
    oo <-- showProductStock(pp) = skip;
    oo <-- showProductPrice(pp) = skip;
    
    /* ----- Operações de pré condições ----- */
    oo <-- preAddUser(uu, nn, cc) = 
        VAR isUsed IN
            isUsed := userIdsUsed_i(uu);
            IF  isUsed = FALSE & uu /= userDummy THEN
                oo := TRUE
            ELSE 
                oo := FALSE
            END
        END;        
    oo <-- preRemoveUser(uu) = skip;
    oo <-- preAltNameUser(uu, nn) = skip;
    oo <-- preAddCredit(uu, cc) = skip;
    oo <-- preWithdrawCredit(uu, cc) =  skip;
    oo <-- preAddProduct(ii, nn, uu, qq, pp) = skip;
    oo <-- preRemoveProduct(ii) = skip;
    oo <-- preAltProductName(ii, nn) = skip;
    oo <-- preAltProductStock(ii, qq) = skip;
    oo <-- preAltProductPrice(ii, pp) = skip;
    oo <-- preBuyProduct(uu, pp, qq) = skip;
    oo <-- preReturnProduct(uu, pp, rr, qq) = skip;
    oo <-- preAddProductToCart(uu, pp, qq) = skip;
    oo <-- preRemoveProductFromCart(uu, pp, rr, qq) = skip;
    oo <-- preBuyProductsFromCart(uu) = skip;
    oo <-- prePayDebt(ii) =  skip;
    oo <-- prePayDebtWithCredit(ii, cc) = skip;
    oo <-- preWithdrawInactiveCredit(uu) = skip;
    oo <-- preRemoveInactiveUser(uu) = skip
 END